
#------------------------------------------------------------------------------
# Determine the target platform.

ifeq      ($(shell uname), Darwin)
	OSX = true
else ifeq ($(shell uname), Linux)
	LINUX = true
endif

#------------------------------------------------------------------------------
# Configure the compiler

CC      = cc
CXX     = c++
CFLAGS  = -fno-rtti -Wall

ifdef DEBUG
	CONFIG  = Debug
	CFLAGS += -g
else
	CONFIG  = Release
	CFLAGS += -DNDEBUG -O3 -march=athlon64 -fomit-frame-pointer
endif

#------------------------------------------------------------------------------
# Configure the system libraries.

ifdef OSX
	SYSLIBS = -framework OpenGL \
 		  -framework IOKit \
		  -framework Cocoa \
 		  -framework Carbon \
 		  -framework CoreAudio \
 		  -framework AudioUnit \
 		  -framework AudioToolbox \
 		  -framework ForceFeedback \
 		  -framework ApplicationServices
	LIBPATH = /usr/local/lib/ /opt/local/lib/ /usr/lib/
endif

ifdef LINUX
	ifdef DYNAMIC
		CFLAGS += -fPIC
	else
		CFLAGS += -static-libgcc -static-libstdc++
	endif
	SYSLIBS = -lGL
	LIBPATH = /usr/local/lib/ /usr/lib/ /usr/lib/x86_64-linux-gnu/
endif

#------------------------------------------------------------------------------
# Configure the dependencies either statically or dynamically.

PKG_CONFIG = $(firstword $(wildcard /usr/local/bin/pkg-config \
			                  /usr/bin/pkg-config) \
			                           pkg-config)

PKGS = freetype2 libtiff-4 mxml libpng ode zlib sdl2 glew

ifdef DYNAMIC
	LIBS += $(shell $(PKG_CONFIG) --libs $(PKGS))
else
	LIBS += $(firstword $(wildcard $(addsuffix libfreetype.a, $(LIBPATH))) -lfreetype)
	LIBS += $(firstword $(wildcard $(addsuffix libtiff.a,     $(LIBPATH))) -ltiff)
	LIBS += $(firstword $(wildcard $(addsuffix libjpeg.a,     $(LIBPATH))) -ljpeg)
	LIBS += $(firstword $(wildcard $(addsuffix libmxml.a,     $(LIBPATH))) -lmxml)
	LIBS += $(firstword $(wildcard $(addsuffix libpng.a,      $(LIBPATH))) -lpng)
	LIBS += $(firstword $(wildcard $(addsuffix libode.a,      $(LIBPATH))) -lode)
	LIBS += $(firstword $(wildcard $(addsuffix libz.a,        $(LIBPATH))) -lz)
	LIBS += $(firstword $(wildcard $(addsuffix libSDL2main.a, $(LIBPATH))))
	LIBS += $(firstword $(wildcard $(addsuffix libSDL2.a,     $(LIBPATH))) -lSDL2)
	LIBS += $(firstword $(wildcard $(addsuffix libGLEW.a,     $(LIBPATH))) -lGLEW)
	ifdef OSX
		LIBS += $(firstword $(wildcard $(addsuffix libiconv.a, $(LIBPATH))) -liconv)
	endif
endif

CFLAGS += $(sort $(shell $(PKG_CONFIG) --cflags $(PKGS)))

#------------------------------------------------------------------------------
# Optional Oculus SDK

ifdef OSX
	OVRPATH = /usr/local/OculusSDK/LibOVR
	ifneq (, $(wildcard $(OVRPATH)))
		ifdef DEBUG
			LIBS += -L$(OVRPATH)/Lib/Mac/Debug -lovr
		else
			LIBS += -L$(OVRPATH)/Lib/Mac/Release -lovr
		endif
		CFLAGS  += -I$(OVRPATH)/Include
		CFLAGS  += -I$(OVRPATH)/Src
		CFLAGS  += -DCONFIG_OCULUS
	endif
endif

ifdef LINUX
	OVRPATH = /usr/local/OculusSDK/LibOVR
	ifneq (, $(wildcard $(OVRPATH)))
		LIBS    += -L$(OVRPATH)/Lib/Linux/Release/x86_64 -lovr -lXrandr
		SYSLIBS += -ludev -lX11 -lXinerama
		CFLAGS  += -I$(OVRPATH)/Include
		CFLAGS  += -I$(OVRPATH)/Src
		CFLAGS  += -DCONFIG_OCULUS
	endif
endif

#------------------------------------------------------------------------------
# Optional Sixense SDK (disabled for now)

#SIXPATH = /usr/local
#
#ifneq (, $(wildcard $(SIXPATH)/lib/libsixense*))
#	LIBS   += -L$(SIXPATH)/lib -lsixense_x64
#	CFLAGS += -I$(SIXPATH)/include
#	CFLAGS += -DCONFIG_SIXENSE
#endif

#------------------------------------------------------------------------------

LIBS += $(SYSLIBS)

#------------------------------------------------------------------------------

%.d : %.cpp
	$(CXX) $(CFLAGS) -MM -MG -MF $@ -MT $*.o $<

%.o : %.cpp
	$(CXX) $(CFLAGS) -c $< -o $@

#------------------------------------------------------------------------------
